# env variables {{{

export EDITOR="vim"

# Path to your dotfiles.
export DOTFILES=$HOME/.dotfiles

export PATH="$HOME/.local/bin:$PATH"

export BAT=batcat

# colored manpages with bat
export MANPAGER="sh -c 'col -bx | $BAT -l man -p'"

export TLDR_COLOR_NAME="magenta bold"
export TLDR_COLOR_DESCRIPTION="white"
export TLDR_COLOR_EXAMPLE="green"
export TLDR_COLOR_COMMAND="red bold"
export TLDR_COLOR_PARAMETER="cyan"
# }}}
# aliases {{{

alias aptu="sudo apt update && sudo apt upgrade"
alias apti="sudo apt install"
alias aptr="sudo apt remove"
alias aptl="apt list --installed"

alias c="clear"

# enable aliases to be sudo'ed
alias sudo="sudo "

alias v="vim"

# displays ip address
alias myip="curl http://ipecho.net/plain; echo"

# opens the zsh config file for editing
alias config="vim $DOTFILES/.zshrc_pi"

alias vconfig="vim $DOTFILES/.vimrc"

# reloads the terminal
alias reload="source $HOME/.zshrc"

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

alias checksize="du -sch $HOME/* $HOME/.* | sort -hr"

alias grep="grep --color=auto -E"

# Make shell handle commands containing a leading $
alias "$"="$@"

# use different theme for bat
alias bat="$BAT --theme=TwoDark"

# colored help pages
alias bathelp="$BAT --plain --language=help"

alias neofetch="neofetch --memory_unit 'mib'"
# }}}
# python {{{

alias py="python3"
alias pip="pip3"
alias venv="python3 -m venv .venv"
alias activate="source .venv/bin/activate"

# }}}
# ls {{{

eval `dircolors $DOTFILES/LS_COLORS`
alias ls="ls --color=auto -Fh"
alias la="ls -A"
alias ll="ls -l"
alias lla="ls -lA"

# }}}
# git {{{

alias ga="git add -A"
alias gac="git add -A && git commit -m"
alias gb="git branch"
alias gbd="git branch -d"
alias gc="git commit -m"
alias gco="git checkout"
alias gd="git diff --color | sed 's/^\([^-+ ]*\)[-+ ]/\\1/' | less -rFX"
alias gf="git fetch"
alias gl="git pull --prune"
alias glog="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias grst="git reset ."
alias gp="git push"
alias gpu="git push -u origin"
alias gs="git status -sb"
alias gst="git stash -u"
alias gstd="git stash drop"
alias gstl="git stash list"
alias gstp="git stash pop"

function acp(){
    git add -A
    git commit -m "$1"
    git push
}

function gcob {
    git checkout -b "$1"
    git push -u origin "$1"
}

function ginit(){
    git init
    git remote add origin "$1"
    git add -A
    git commit -m "initial commit"
    git push -u origin main
}

# git diff with bat
function batdiff() {
    git diff --name-only --relative --diff-filter=d | xargs $BAT --diff
}

# }}}
# misc functions {{{

function help() {
    "$@" --help 2>&1 | bathelp
}

function path() {
    echo $PATH | tr ':' '\n'
}

function mkcd() {
    mkdir -p "$1" && cd "$1";
}

# can do "up" or "up x"
function up {
    if [[ "$#" < 1 ]] ; then
        cd ..
    else
        CDSTR=""
        for i in {1..$1} ; do
            CDSTR="../$CDSTR"
        done
        cd $CDSTR
    fi
}

# Determine size of a file or total size of a directory
function fs() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh;
    else
        local arg=-sh;
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@";
    else
        du $arg .[^.]* ./* | sort -hr
    fi;
}

function weather() {
    city="$1"

    if [ -z "$city" ]; then
        city="Middlebury"
    fi

    eval "curl http://wttr.in/${city}"
}

# display a list of supported colors
function lscolors {
    ((cols = $COLUMNS - 4))
    s=$(printf %${cols}s)
    for i in {000..$(tput colors)}; do
        echo -e $i $(tput setaf $i; tput setab $i)${s// /=}$(tput op);
    done
}


# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRN;
}

# }}}
# prompt {{{
PROMPT="%B%F{green}%n@%m%f%b %B%F{red}%~%f%b %# "

# shows branch name on right if applicable
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
RPROMPT=\$vcs_info_msg_0_
zstyle ':vcs_info:git:*' formats '%F{green}(%b)%f'
zstyle ':vcs_info:*' enable git

# }}}
# shell options {{{
export HISTFILE=$HOME/.zsh_history
export SAVEHIST=5000
export HISTSIZE=2000

setopt NO_CASE_GLOB
setopt AUTO_CD
# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY
# adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY
# expire duplicates first
setopt HIST_EXPIRE_DUPS_FIRST
# do not store duplications
setopt HIST_IGNORE_DUPS
# iore duplicates when searching
setopt HIST_FIND_NO_DUPS
# removes blank lines from history
setopt HIST_REDUCE_BLANKS
setopt HIST_VERIFY
setopt CORRECT
setopt CORRECT_ALL

# }}}
# completion {{{
autoload -Uz compinit && compinit
# case insensitive path-completion
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
# partial completion suggestions
zstyle ':completion:*' list-suffixeszstyle ':completion:*' expand prefix suffix
# }}}

# remove uniques from $PATH
typeset -aU path

source $HOME/.local/z/z.sh
source $HOME/.local/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
