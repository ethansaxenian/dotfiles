#!/usr/bin/env zsh

# use fzf and the spotify api to search for a song, then play it with shpotify (https://github.com/hnarayanan/shpotify)

if test ! $(command -v spotify); then
  echo "shpotify not installed"
  exit 1
fi

if test ! $(command -v jq); then
  echo "jq not installed"
  exit 1
fi

USER_CONFIG_FILE="${HOME}/.shpotify.cfg";

if [[ ! -a "$USER_CONFIG_FILE" ]]; then
  echo "$USER_CONFIG_FILE not found"
  exit 1
fi

source "${USER_CONFIG_FILE}";

function getAccessToken() {
  SHPOTIFY_CREDENTIALS=$(printf "${CLIENT_ID}:${CLIENT_SECRET}" | base64 | tr -d "\n");

  SPOTIFY_TOKEN_URI="https://accounts.spotify.com/api/token"
  SPOTIFY_SEARCH_API="https://api.spotify.com/v1/search"

  SPOTIFY_TOKEN_RESPONSE_DATA=$( \
    curl "${SPOTIFY_TOKEN_URI}" \
      --silent \
      -X "POST" \
      -H "Authorization: Basic ${SHPOTIFY_CREDENTIALS}" \
      -d "grant_type=client_credentials" \
  )

  if ! [[ "${SPOTIFY_TOKEN_RESPONSE_DATA}" =~ "access_token" ]]; then
    echo "Autorization failed, please check ${USER_CONFG_FILE}"
    echo "${SPOTIFY_TOKEN_RESPONSE_DATA}"
    exit 1
  fi

  SPOTIFY_ACCESS_TOKEN=$(echo "${SPOTIFY_TOKEN_RESPONSE_DATA}" | jq -r '.access_token')
}

function searchSpotify() {
  SPOTIFY_RESULTS_JSON=$( \
    curl -s -G $SPOTIFY_SEARCH_API \
      -H "Authorization: Bearer ${SPOTIFY_ACCESS_TOKEN}" \
      -H "Accept: application/json" \
      --data-urlencode "q=$query" \
      -d "type=track&limit=50"
  )

  echo "${SPOTIFY_RESULTS_JSON}" | jq -r '.tracks.items[] | .name+" - "+.artists[0].name+" - "+.uri' | sed 's/spotify:track://g'
}

function playSong() {
  track_details="$1"

  if [[ -z "$track_details" ]]; then
    return
  fi

  lines=$(echo "$track_details" | tr "-" "\n")
  spotify_uri=$(echo "$lines" | tail -1 | sed 's/^ *//;s/ *$//')
  spotify play uri "spotify:track:$spotify_uri"
}

suppress_fzf="${@[-1]}"
if [[ "$suppress_fzf" == "no-fzf" ]]; then
  # query = all but last arg
  query=${@:1:$#@[@]-1}
else
  query="$@"
fi

if [[ -z "$query" ]]; then
  # 'search' mode

  # if no args, call this script again with args, but suppress fzf
  track_details=$(return | fzf --header="Search for a song" --no-info --bind "change:reload:$DOTFILES/bin/spot {q} no-fzf")

  playSong "$track_details"

else
  # 'filter' mode
  getAccessToken

  spotify_results=$(searchSpotify $query)

  # there's gotta be a better way to do this...
  if [[ "$suppress_fzf" == "no-fzf" ]]; then
    # this output will go into the original fzf from the call with no args
    echo "$spotify_results"
  else
    # if originally called with args, run fzf normally
    track_details=$(echo "$spotify_results" | fzf --nth=..-2 --header="Filter results for '$query'")

    playSong "$track_details"
  fi
fi
