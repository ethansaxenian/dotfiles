#!/usr/bin/env bash

# git status/add/diff all in one command

# enter: view full-screen diff
# tab: stage/unstage a file
# ctrl-a: stage all files
# ctrl-r: unstage all files
# ctrl-c: start a commit
# alt-d: discard untracked changes
# alt-s: stash all
# ctrl-e: open in $EDITOR


git rev-parse --is-inside-git-dir >/dev/null || exit 1

GIT_FILES="(
  git -c color.status=always status -sbu
  git ls-files | grep -vxFf <(git status -s | grep '^[^?]' | cut -c4-; echo :) | sed 's/^/   /'
)"

eval "$GIT_FILES" \
| fzf \
  --no-sort \
  --tiebreak=index \
  --ansi \
  --header-lines 1 \
  --nth -1 \
  --preview="_git-diff {-1}" \
  --preview-window="right,70%,border-left" \
  --bind="ctrl-/:change-preview-window(down,50%,border-top|hidden|)" \
  --bind="enter:execute:_git-diff {-1} | less -R" \
  --bind="tab:execute-silent(_git-stage-toggle {-1})+reload($GIT_FILES)" \
  --bind="ctrl-a:execute-silent(git add -A)+reload($GIT_FILES)" \
  --bind="ctrl-r:execute-silent(git restore --staged .)+reload($GIT_FILES)" \
  --bind="ctrl-c:execute(git commit)+accept" \
  --bind="alt-d:execute-silent(git restore {-1})+reload($GIT_FILES)" \
  --bind="alt-s:execute-silent(git stash -u)+accept" \
  --bind="ctrl-e:execute($EDITOR {-1})+reload($GIT_FILES)" \
  --header="# enter: view full-screen diff
# tab: stage/unstage a file
# ctrl-a/ctrl-r: stage/unstage all
# ctrl-c: start a commit
# alt-d: discard untracked changes
# alt-s: stash all
# ctrl-e: open in $EDITOR"
